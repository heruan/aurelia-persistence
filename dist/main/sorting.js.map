{"version":3,"sources":["../../src/main/sorting.ts"],"names":[],"mappings":"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","file":"sorting.js","sourcesContent":["import { autoinject } from \"aurelia-dependency-injection\";\nimport { QueueMap } from \"aurelia-utils\";\nimport { Order } from \"./order\";\n\n@autoinject\nexport class Sorting {\n\n    public static SORTING_EVENT: string = \"aurelia.persistence.sorting\";\n\n    private map: QueueMap<string, Order>;\n\n    public constructor(sorting?: Sorting) {\n        this.map = sorting ? new QueueMap<string, Order>(sorting.map) : new QueueMap<string, Order>();\n    }\n\n    get order(): Object {\n        let sorting = { };\n        this.map.forEach((order, property: string) => {\n            sorting[property] = order.getDirection();\n        });\n        return sorting;\n    }\n\n    set order(order: Object) {\n        this.map.clear();\n        for (let property in order) {\n            this.by(property, order[property]);\n        }\n    }\n\n    public by(property: string, direction: number): Sorting {\n        let order = new Order(property, direction);\n        if (direction == Order.NEUTRAL) {\n            this.map.delete(property);\n        } else {\n            this.map.set(property, order);\n        }\n        Object.assign(this.order, this.toJSON());\n        return this;\n    }\n\n    public toggle(property: string): Sorting {\n        if (this.map.has(property)) {\n            let order = this.map.get(property);\n            switch (order.getDirection()) {\n                case Order.DESC:\n                this.by(property, Order.NEUTRAL);\n                break;\n                case Order.ASC:\n                this.by(property, Order.DESC);\n                break;\n                default:\n                this.by(property, Order.ASC);\n            }\n        } else {\n            this.by(property, Order.ASC);\n        }\n        return this;\n    }\n\n    public copy(): Sorting {\n        return new Sorting(this);\n    }\n\n    public toJSON(): Object {\n        return this.order;\n    }\n\n    public static fromJSON(object: Object): Sorting {\n        let filter = new Sorting();\n        filter.order = object;\n        return filter;\n    }\n\n}\n"]}