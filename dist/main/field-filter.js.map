{"version":3,"sources":["../../src/main/field-filter.ts"],"names":[],"mappings":"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","file":"field-filter.js","sourcesContent":["import { FilterQuery } from \"./filter-query\";\n\nexport class FieldFilter {\n\n    public static EQ: string = \"$eq\";\n\n    public static GT: string = \"$gt\";\n\n    public static GTE: string = \"$gte\";\n\n    public static LT: string = \"$lt\";\n\n    public static LTE: string = \"$lte\";\n\n    public static NE: string = \"$ne\";\n\n    public static IN: string = \"$in\";\n\n    public static NIN: string = \"$nin\";\n\n    public static MOD: string = \"$mod\";\n\n    public static REGEX: string = \"$regex\";\n\n    public static ELEM_MATCH: string = \"$elemMatch\";\n\n    private map: Map<string, any>;\n\n    public constructor() {\n        this.map = new Map<string, any>();\n    }\n\n    public equalTo(value: any): FieldFilter {\n        this.map.set(FieldFilter.EQ, value);\n        return this;\n    }\n\n    public greaterThan(value: any): FieldFilter {\n        this.map.set(FieldFilter.GT, value);\n        return this;\n    }\n\n    public greaterThanOrEqualTo(value: any): FieldFilter {\n        this.map.set(FieldFilter.GTE, value);\n        return this;\n    }\n\n    public lessThan(value: any): FieldFilter {\n        this.map.set(FieldFilter.LT, value);\n        return this;\n    }\n\n    public lessThanOrEqualTo(value: any): FieldFilter {\n        this.map.set(FieldFilter.LTE, value);\n        return this;\n    }\n\n    public notEqualTo(value: any): FieldFilter {\n        this.map.set(FieldFilter.NE, value);\n        return this;\n    }\n\n    public in(array: any[]): FieldFilter {\n        this.map.set(FieldFilter.IN, array);\n        return this;\n    }\n\n    public notIn(array: any[]): FieldFilter {\n        this.map.set(FieldFilter.NIN, array);\n        return this;\n    }\n\n    public mod(mod: number): FieldFilter {\n        this.map.set(FieldFilter.MOD, mod);\n        return this;\n    }\n\n    public regex(regex: string): FieldFilter {\n        this.map.set(FieldFilter.REGEX, regex);\n        return this;\n    }\n\n    public elemMatch(filter: FilterQuery): FieldFilter {\n        this.map.set(FieldFilter.ELEM_MATCH, filter);\n        return this;\n    }\n\n    public toJSON(): any {\n        let filter = { };\n        this.map.forEach((value, key) => filter[key] = value)\n        return filter;\n    }\n\n    public static fromJSON(object: Object): FieldFilter {\n        let filter = new FieldFilter();\n        for (let field in object) {\n            switch (field) {\n                case FieldFilter.ELEM_MATCH: filter.elemMatch(FilterQuery.fromJSON(object[field]));\n                break;\n                default: filter.map.set(field, object[field]);\n            }\n        }\n        return filter;\n    }\n\n}\n"]}